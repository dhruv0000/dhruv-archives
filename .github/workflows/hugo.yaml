# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages on Release

on:
  # Runs on releases
  release:
    types: [published]
  # Runs on pushes to main branch
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      production:
        description: 'Build production version'
        required: true
        default: true
        type: boolean
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'production'
        type: string
      hugo_environment:
        description: 'Hugo environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - development
          - staging

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      # - name: Install Dart Sass
      #   run: sudo snap install dart-sass
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Initialize and update submodules (explicit handling)
        run: |
          git submodule update --init --recursive --remote
          git submodule status
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      
      - name: Build Tailwind CSS
        run: |
          npm install -g pnpm@latest-10
          npm install -g tailwindcss postcss autoprefixer -D
      
      - name: List directory structure for debugging
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Themes directory:"
          ls -la themes/ || echo "No themes directory found"
      
      - name: Build with Hugo
        env:
          TZ: America/New_York
        run: |
          make build          
      
      - name: Check generated public directory
        run: |
          echo "Generated public directory content:"
          ls -la public/
          echo "Themes CSS file:"
          cat public/main.min.css || echo "No CSS file found"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .public/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4